设计一个简单的web-api，包含登录和注册功能，数据用MongoDB储存，同时设计一个简单的前端界面。
当登陆成功后将转入todolist界面，
现在在todolist文件夹中设计todolist，数据和web-api保存在一个MongoDB里面，todolist界面布局如图所示：
1、左边分为7栏，每一栏有对应的名字（分别为无标签、星标、今日截止、已归档、个人、工作、重要）以及任务数量
2、前四个任务类型会使右半边的颜色变为黄色，后面三个类型会使右半边的颜色分别变为绿色，蓝色和红色。
3、每一个任务有以下几个内容：任务标题，任务状态（共三种，分为未开始、进行中和已完成），持续时间（记开始时间和结束时间），标签（可添加，可不添加，共三个标签，个人，工作和重要），优先级（共5种，分为极低、低、中、高、极高）、备注，并且标注任务创建具体时间。
4、当任务没有标签，无标签类显示该任务；
      当优先级为高或者极高，星标类显示该任务；
      当任务持续时间的结束时间在今日时，今日截止类显示该任务；
      当任务状态为已完成，已归档类显示该人物。
5、每个任务最右侧添加一个小删除按钮，能够删除；最左侧添加一个能勾选的框，默认没勾选，勾选代表任务已经完成了（将任务状态设置为已完成），取消勾选代表任务未完成（将任务状态设置为未完成）
6、每个任务默认起始时间为创建任务时的精确北京时间
7、任务数据保存在与web相同的MongoDB下
8、任务状态变为已完成时，将任务名称变灰，同时字体中间加一条横线。



请将todolist和web两个文件夹的内容做成两个后端、使得web登录后跳转至todolist，每个用户都有对应的todolist查看且不能互相查看，并在todolist左边那一栏上加一个退出登录按键，点击能退出登录并返回登陆界面




当登陆成功后将转入todolist界面，数据和web-api保存在一个MongoDB里面，todolist界面布局如图所示：

1、左边分为7栏，每一栏有对应的名字（分别为无标签、星标、今日截止、已归档、个人、工作、重要）以及任务数量

2、前四个任务类型会使右半边的颜色变为黄色，后面三个类型会使右半边的颜色分别变为绿色，蓝色和红色。

3、每一个任务有以下几个内容：任务标题，任务状态（共三种，分为未开始、进行中和已完成），持续时间（记开始时间和结束时间），标签（可添加，可不添加，共三个标签，个人，工作和重要），优先级（共5种，分为极低、低、中、高、极高）、备注，并且标注任务创建具体时间。

4、当任务没有标签，无标签类显示该任务；

当优先级为高或者极高，星标类显示该任务；

当任务持续时间的结束时间在今日时，今日截止类显示该任务；

当任务状态为已完成，已归档类显示该人物。

5、每个任务最右侧添加一个小删除按钮，能够删除；最左侧添加一个能勾选的框，默认没勾选，勾选代表任务已经完成了（将任务状态设置为已完成），取消勾选代表任务未完成（将任务状态设置为未完成）

6、每个任务默认起始时间为创建任务时的精确北京时间

7、任务数据保存在与web相同的MongoDB下

8、任务状态变为已完成时，将任务名称变灰，同时字体中间加一条横线。

注意：请把todolist 和web的登陆界面写成两个html和两个css方便后期操作